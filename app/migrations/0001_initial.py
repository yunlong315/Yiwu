# Generated by Django 3.2.3 on 2023-08-30 16:26

import app.models
import app.tools
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('chat_id', models.AutoField(primary_key=True, serialize=False)),
                ('chat_name', models.CharField(default='', max_length=255, unique=True)),
                ('chat_avatar', models.CharField(default='avatar/default_avatar.png', max_length=255)),
                ('chat_description', models.TextField(default='')),
                ('chat_type', models.CharField(choices=[('default', 'default'), ('public', 'public'), ('private', 'private')], default='default', max_length=20)),
            ],
            options={
                'db_table': 'chat',
            },
        ),
        migrations.CreateModel(
            name='ConfirmCode',
            fields=[
                ('cc_id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('user_email', models.CharField(max_length=255)),
                ('to_date', models.DateTimeField(db_index=True, default=app.models.default_to_date)),
            ],
            options={
                'db_table': 'confirm_code',
                'ordering': ['-to_date'],
            },
        ),
        migrations.CreateModel(
            name='Directory',
            fields=[
                ('directory_id', models.AutoField(primary_key=True, serialize=False)),
                ('directory_name', models.CharField(max_length=255)),
                ('directory_directory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.directory')),
            ],
            options={
                'db_table': 'directory',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('document_id', models.AutoField(primary_key=True, serialize=False)),
                ('document_title', models.CharField(default='', max_length=255)),
                ('document_content', models.JSONField()),
            ],
            options={
                'db_table': 'document',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('group_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_name', models.CharField(default='', max_length=255)),
                ('group_avatar', models.ImageField(default='avatar/default_avatar.png', max_length=255, upload_to=app.tools.random_avatar_path)),
                ('group_description', models.TextField(blank=True, default='')),
            ],
            options={
                'db_table': 'group',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('message_id', models.AutoField(primary_key=True, serialize=False)),
                ('message_description', models.TextField(default='')),
                ('message_time', models.DateTimeField(auto_now=True)),
                ('message_type', models.CharField(choices=[('text', 'text'), ('file', 'file'), ('image', 'image'), ('video', 'video')], default='text', max_length=255)),
            ],
            options={
                'db_table': 'message',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.AutoField(primary_key=True, serialize=False)),
                ('project_name', models.CharField(max_length=255)),
                ('project_create_date', models.DateField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deletion_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project',
                'ordering': ['-project_create_date'],
            },
        ),
        migrations.CreateModel(
            name='ResetCode',
            fields=[
                ('rc_id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('user_email', models.CharField(max_length=255)),
                ('to_date', models.DateTimeField(db_index=True, default=app.models.default_to_date)),
            ],
            options={
                'db_table': 'reset_code',
                'ordering': ['-to_date'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_nickname', models.CharField(db_index=True, max_length=255)),
                ('user_name', models.CharField(default='', max_length=255)),
                ('user_password', models.CharField(default='', max_length=255)),
                ('user_email', models.CharField(default='', max_length=255, unique=True)),
                ('user_avatar', models.ImageField(default='avatar/default_avatar.png', max_length=255, upload_to=app.tools.random_avatar_path)),
                ('user_description', models.TextField(default='')),
                ('user_instruction_complete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='UserMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_at', models.BooleanField(default=False)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user')),
            ],
            options={
                'db_table': 'userMessage',
            },
        ),
        migrations.CreateModel(
            name='UserChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.BooleanField(default=False)),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.chat')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user')),
            ],
            options={
                'db_table': 'userChat',
            },
        ),
        migrations.CreateModel(
            name='ProtoType',
            fields=[
                ('prototype_id', models.AutoField(primary_key=True, serialize=False)),
                ('prototype_name', models.CharField(default='', max_length=255)),
                ('prototype_description', models.CharField(default='', max_length=255)),
                ('prototype_content', models.JSONField()),
                ('prototype_creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user')),
                ('prototype_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.project')),
            ],
            options={
                'db_table': 'prototype',
            },
        ),
        migrations.AddField(
            model_name='project',
            name='project_creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user'),
        ),
        migrations.AddField(
            model_name='project',
            name='project_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.group'),
        ),
        migrations.AddField(
            model_name='message',
            name='message_from',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user'),
        ),
        migrations.AddField(
            model_name='message',
            name='message_to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.chat'),
        ),
        migrations.CreateModel(
            name='DocumentVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dv_time', models.DateTimeField(auto_now=True)),
                ('dv_origin_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dv_origin_document', to='app.document')),
                ('dv_saved_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dv_saved_document', to='app.document')),
                ('dv_saver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user')),
            ],
            options={
                'db_table': 'document_version',
            },
        ),
        migrations.AddField(
            model_name='document',
            name='document_creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user'),
        ),
        migrations.AddField(
            model_name='document',
            name='document_directory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.directory'),
        ),
        migrations.AddField(
            model_name='directory',
            name='directory_project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.project'),
        ),
        migrations.AddField(
            model_name='chat',
            name='chat_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.group'),
        ),
        migrations.AddField(
            model_name='chat',
            name='chat_owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.user'),
        ),
        migrations.CreateModel(
            name='ChangeInPrototype',
            fields=[
                ('cip_id', models.AutoField(primary_key=True, serialize=False)),
                ('cip_time', models.DateTimeField(auto_now=True)),
                ('cip_content', models.JSONField()),
                ('cip_prototype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.prototype')),
            ],
            options={
                'db_table': 'change_in_prototype',
            },
        ),
        migrations.CreateModel(
            name='At',
            fields=[
                ('at_id', models.AutoField(primary_key=True, serialize=False)),
                ('at_type', models.CharField(choices=[('chat', 'chat'), ('document', 'document'), ('invitation', 'invitation')], default='chat', max_length=255)),
                ('at_time', models.DateTimeField(auto_now=True)),
                ('is_read', models.BooleanField(default=False)),
                ('at_chat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.chat')),
                ('at_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.document')),
                ('at_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='at_from', to='app.user')),
                ('at_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.message')),
                ('at_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='at_user', to='app.user')),
            ],
            options={
                'db_table': 'at',
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identity', models.CharField(choices=[('creator', 'creator'), ('admin', 'admin'), ('member', 'member')], default='member', max_length=20)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user')),
            ],
            options={
                'db_table': 'userGroup',
                'unique_together': {('user', 'group')},
            },
        ),
    ]
